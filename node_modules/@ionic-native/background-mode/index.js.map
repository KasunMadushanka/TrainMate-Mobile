{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/background-mode/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n/**\r\n * Configurations items that can be updated.\r\n */\r\nexport interface BackgroundModeConfiguration {\r\n\r\n  /**\r\n   * Title of the background task\r\n   */\r\n  title?: String;\r\n\r\n  /**\r\n   * Description of background task\r\n   */\r\n  text?: String;\r\n\r\n  /**\r\n   * This will look for <icon name>.png in platforms/android/res/drawable|mipmap\r\n   */\r\n  icon?: string;\r\n\r\n  color?: string;\r\n\r\n  /**\r\n   * By default the app will come to foreground when taping on the notification. If false, plugin wont come to foreground when tapped.\r\n   */\r\n  resume?: boolean;\r\n\r\n  hidden?: boolean;\r\n\r\n  bigText?: boolean;\r\n\r\n  /**\r\n   * The text that scrolls itself on statusbar\r\n   */\r\n  ticker?: String;\r\n\r\n  /**\r\n   * if true plugin will not display a notification. Default is false.\r\n   */\r\n  silent?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * @name Background Mode\r\n * @description\r\n * Cordova plugin to prevent the app from going to sleep while in background.\r\n * Requires Cordova plugin: cordova-plugin-background-mode. For more info about plugin, vist: https://github.com/katzer/cordova-plugin-background-mode\r\n *@usage\r\n * ```typescript\r\n * import { BackgroundMode } from '@ionic-native/background-mode';\r\n *\r\n * constructor(private backgroundMode: BackgroundMode) { }\r\n *\r\n * ...\r\n *\r\n * this.backgroundMode.enable();\r\n * ```\r\n *\r\n * @interfaces\r\n * BackgroundModeConfiguration\r\n */\r\n@Plugin({\r\n  pluginName: 'BackgroundMode',\r\n  plugin: 'cordova-plugin-background-mode',\r\n  pluginRef: 'cordova.plugins.backgroundMode',\r\n  repo: 'https://github.com/katzer/cordova-plugin-background-mode',\r\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\r\n})\r\n\r\nexport class BackgroundMode {\r\n\r\n  /**\r\n   * Enable the background mode.\r\n   * Once called, prevents the app from being paused while in background.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  enable(): void { }\r\n\r\n  /**\r\n   * Disable the background mode.\r\n   * Once the background mode has been disabled, the app will be paused when in background.\r\n   */\r\n  @Cordova()\r\n  disable(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Checks if background mode is enabled or not.\r\n   * @returns {boolean} returns a boolean that indicates if the background mode is enabled.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  isEnabled(): boolean { return; }\r\n\r\n  /**\r\n   * Can be used to get the information if the background mode is active.\r\n   * @returns {boolean} returns a boolean that indicates if the background mode is active.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  isActive(): boolean { return; }\r\n\r\n  /**\r\n   * Override the default title, ticker and text.\r\n   * Available only for Android platform.\r\n   * @param {Configure} options List of option to configure. See table below\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android']\r\n  })\r\n  setDefaults(options?: BackgroundModeConfiguration): Promise<any> { return; }\r\n\r\n  /**\r\n   * Modify the displayed information.\r\n   * Available only for Android platform.\r\n   * @param {Configure} options Any options you want to update. See table below.\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android']\r\n  })\r\n  configure(options?: BackgroundModeConfiguration): Promise<any> { return; }\r\n\r\n  /**\r\n   * Listen for events that the plugin fires. Available events are `enable`, `disable`, `activate`, `deactivate` and `failure`.\r\n   * @param event {string} Event name\r\n   * @returns {Observable<any>}\r\n   */\r\n  @Cordova({\r\n    observable: true,\r\n    clearFunction: 'un',\r\n    clearWithArgs: true\r\n  })\r\n  on(event: string): Observable<any> { return; }\r\n\r\n  /**\r\n   * Android allows to programmatically move from foreground to background.\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  moveToBackground(): void {}\r\n\r\n  /**\r\n   * Android allows to programmatically move from background to foreground.\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  moveToForeground(): void {}\r\n\r\n  /**\r\n   * Override the back button on Android to go to background instead of closing the app.\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  overrideBackButton(): void {}\r\n\r\n  /**\r\n   * Exclude the app from the recent task list works on Android 5.0+.\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  excludeFromTaskList(): void {}\r\n\r\n  /**\r\n   * The method works async instead of isActive() or isEnabled().\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android']\r\n  })\r\n  isScreenOff(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * Turn screen on\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  wakeUp(): void {}\r\n\r\n  /**\r\n   * Turn screen on and show app even locked\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  unlock(): void {}\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}